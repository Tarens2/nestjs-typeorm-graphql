scalar Odd

type Query {
    getUser(id: Odd!): User
    getTeam(id: Int!): Team
    getTeams: [Team]!
    getUsers: [User]!
    getMe: User
    login(username: String!, password: String!): LoginResponse
}

type Mutation {
    createUser(username: String!, password: String!): User
}

type User {
    id: Int!
    firstName: String
    lastName: String
    age: Int
    team: Team
    username: String!
}

type Team {
    id: Int!
    name: String!
    users: [User!]
}

type LoginResponse {
    accessToken: String!
}

